{"remainingRequest":"D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\DESK\\frontend\\toDoList\\gitToDo\\MYtodo\\ver4\\itemvue\\App.vue?vue&type=template&id=472cff63&","dependencies":[{"path":"G:\\DESK\\frontend\\toDoList\\gitToDo\\MYtodo\\ver4\\itemvue\\App.vue","mtime":1628673580774},{"path":"D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\nodejs\\node_global\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}